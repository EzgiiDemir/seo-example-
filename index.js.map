{"version":3,"file":"index.js","sources":["src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\ninterface metaProps {\n  url: string;\n  next?: boolean;\n  pageTitle: string;\n  description: string;\n  previewImage: string;\n  contentLanguage?: string;\n  children?: React.ReactNode;\n  contentType?: \"website\" | \"article\";\n}\n\nexport const MetaData = ({\n  url,\n  children,\n  pageTitle,\n  description,\n  contentType,\n  previewImage,\n  contentLanguage,\n}: metaProps) => {\n  return (\n    <>\n      // @ts-ignore\n      <Helmet defer={false}>\n        <title>{pageTitle}</title>\n        <meta name=\"description\" content={description} />\n\n        <meta itemProp=\"name\" content={pageTitle} />\n        <meta itemProp=\"description\" content={pageTitle} />\n        {previewImage ? <meta itemProp=\"image\" content={previewImage} /> : null}\n\n        <meta property=\"og:url\" content={url} />\n        <meta\n          property=\"og:type\"\n          content={contentType ? contentType : \"website\"}\n        />\n        <meta property=\"og:locale\" content={contentLanguage ?? \"en_US\"} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta property=\"og:description\" content={pageTitle} />\n        {previewImage ? (\n          <meta property=\"og:image\" content={previewImage} />\n        ) : null}\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={pageTitle} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:site\" content={url} />\n        {previewImage ? (\n          <meta name=\"twitter:image\" content={previewImage} />\n        ) : null}\n\n        {children}\n      </Helmet>\n    </>\n  );\n};\n"],"names":["MetaData","_a","url","children","pageTitle","description","contentType","previewImage","contentLanguage","React","createElement","Fragment","Helmet","defer","name","content","itemProp","property"],"mappings":"2DAcO,IAAMA,EAAW,SAACC,GACvB,IAAAC,QACAC,aACAC,cACAC,EAAWJ,EAAAI,YACXC,EAAWL,EAAAK,YACXC,EAAYN,EAAAM,aACZC,EAAeP,EAAAO,gBAEf,OACEC,EAAAC,cAAAD,EAAAE,SAAA,qBAEEF,EAAAC,cAACE,EAAM,CAACC,OAAO,GACbJ,EAAAC,cAAA,QAAA,KAAQN,GACRK,EAAAC,cAAA,OAAA,CAAMI,KAAK,cAAcC,QAASV,IAElCI,EAAAC,cAAA,OAAA,CAAMM,SAAS,OAAOD,QAASX,IAC/BK,EAAAC,cAAA,OAAA,CAAMM,SAAS,cAAcD,QAASX,IACrCG,EAAeE,EAAAC,cAAA,OAAA,CAAMM,SAAS,QAAQD,QAASR,IAAmB,KAEnEE,EAAAC,cAAA,OAAA,CAAMO,SAAS,SAASF,QAASb,IACjCO,EAAAC,cAAA,OAAA,CACEO,SAAS,UACTF,QAAST,GAA4B,YAEvCG,EAAAC,cAAA,OAAA,CAAMO,SAAS,YAAYF,QAASP,QAAAA,EAAmB,UACvDC,EAAAC,cAAA,OAAA,CAAMO,SAAS,WAAWF,QAASX,IACnCK,EAAAC,cAAA,OAAA,CAAMO,SAAS,iBAAiBF,QAASX,IACxCG,EACCE,EAAAC,cAAA,OAAA,CAAMO,SAAS,WAAWF,QAASR,IACjC,KAEJE,EAAAC,cAAA,OAAA,CAAMI,KAAK,eAAeC,QAAQ,wBAClCN,EAAAC,cAAA,OAAA,CAAMI,KAAK,gBAAgBC,QAASX,IACpCK,EAAAC,cAAA,OAAA,CAAMI,KAAK,sBAAsBC,QAASV,IAC1CI,EAAAC,cAAA,OAAA,CAAMI,KAAK,eAAeC,QAASb,IAClCK,EACCE,EAAAC,cAAA,OAAA,CAAMI,KAAK,gBAAgBC,QAASR,IAClC,KAEHJ,GAIT"}